/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LeaderboardGui;

import staticData.DialogBoxIcon;
import LeaderBoardModel.LeaderBoardEntry;
import LeaderBoardModel.LeaderBoardModel;
import java.awt.Color;
import javax.swing.JOptionPane;

/**
 * @author jamyangtamang
 * 
 * Allows user to enter their stats
 */
public class AddStats extends javax.swing.JFrame {
    private LeaderBoardFrame frame;
    private Double weight;
    private int reps;

    /**
     * @param frame keeps a reference to the LeaderBoardFrame
     *        which is static and therefore every user has only one
     * @param weight the weight the user lifted
     * @param reps the amount of times the user sucessfully lifted the weight
     */
    public AddStats(LeaderBoardFrame frame) {
        initComponents();
        this.frame = frame;
        exerciseOptions.addItem("BenchPress");
        exerciseOptions.addItem("Squat");
        exerciseOptions.addItem("Deadlift");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exerciseLbl = new javax.swing.JLabel();
        exerciseOptions = new javax.swing.JComboBox<>();
        userNameInput = new javax.swing.JTextField();
        userNameLbl = new javax.swing.JLabel();
        repInput = new javax.swing.JTextField();
        weightInput = new javax.swing.JTextField();
        repLbl = new javax.swing.JLabel();
        weightLbl = new javax.swing.JLabel();
        ormOutput = new javax.swing.JTextField();
        submitBtn = new javax.swing.JButton();
        heading = new javax.swing.JTextField();
        cancelBtn = new javax.swing.JButton();
        calculateORM = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        exerciseLbl.setText("Exercise");

        userNameLbl.setText("Your Name");

        repInput.setText("Please Enter the Number of Reps");
        repInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                repInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                repInputFocusLost(evt);
            }
        });

        weightInput.setText("Please Enter the Weight you lifted");
        weightInput.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                weightInputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                weightInputFocusLost(evt);
            }
        });

        repLbl.setText("Reps Done");

        weightLbl.setText("Weight lifted");

        ormOutput.setEditable(false);

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        heading.setEditable(false);
        heading.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        heading.setText("Enter the details below");

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        calculateORM.setText("Calculate ORM");
        calculateORM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateORMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cancelBtn)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(repLbl)
                                            .addComponent(weightLbl)
                                            .addComponent(exerciseLbl))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exerciseOptions, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(repInput, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(userNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(calculateORM, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(submitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ormOutput))))
                        .addContainerGap(13, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exerciseOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exerciseLbl))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(repInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(repLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(weightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(weightLbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ormOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calculateORM)))
                    .addComponent(userNameLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * returns user to the frame
     * @param evt event trigger
     */
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.setVisible(false);
        frame.setVisible(true);
    }//GEN-LAST:event_cancelBtnActionPerformed

    /**
     * Takes the userName and one rep max and adds it to the Leaderboard for the specified exercise group
     * Won't allow if either the Name or one rep max field is blank
     * @param evt event trigger
     */
    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        if(!userNameInput.getText().isBlank()){
            try{
                if(Double.parseDouble(ormOutput.getText()) < 0)
                    throw new IllegalArgumentException();
                else{
                    LeaderBoardEntry e = new LeaderBoardEntry(userNameInput.getText(), (String) exerciseOptions.getItemAt(exerciseOptions.getSelectedIndex()), Double.parseDouble(ormOutput.getText()));
                    LeaderBoardModel.getInstance().addEntry(e);
                    this.setVisible(false);
                    frame.UpdateFrame();
                    frame.setVisible(true);
                }
            }
            catch (IllegalArgumentException e) {
                   ormOutput.setBackground(Color.YELLOW);
                   JOptionPane.showMessageDialog(null,"Please Calculate Your ORM before Submitting.","ORM issue",JOptionPane.WARNING_MESSAGE,DialogBoxIcon.ERROR);     
            }
        }
        else
            JOptionPane.showMessageDialog(null,"Please Enter a Name before Submitting.","Name issue",JOptionPane.WARNING_MESSAGE,DialogBoxIcon.ISSUE); 
    }//GEN-LAST:event_submitBtnActionPerformed

    /**
     * Checks to see if the data user has entered is valid
     * Builds a string with the respective messages for invalid user inputs
     * if there are invalid userInputs prints it out to the user
     * @return wether the data is good to enter
     */
    private boolean checkInputs(){
        boolean status = true;
        StringBuilder sb = new StringBuilder();
        try{
            this.weight = (Double.parseDouble(weightInput.getText()));
            if (this.weight < 0) {
                throw new IllegalArgumentException("Only Positive Numbers & no Letters Please!"); 
           }
        }
        catch(NumberFormatException nfe){
            weightInput.setBackground(Color.RED);
            status = false;
            sb.append("Improper weight value!\n");
        }
        catch (IllegalArgumentException e) {
               weightInput.setBackground(Color.RED);
               status = false;
               sb.append("Can't have negetive amount of weights!\n");
        }
        
        try{
            this.reps = (Integer.parseInt(repInput.getText()));
            if (this.reps < 0) {
                throw new IllegalArgumentException("Only Positive Numbers & no Letters Please!"); 
           }
        }
        catch(NumberFormatException nfe){
            repInput.setBackground(Color.RED);
            status = false;
            sb.append("Improper rep value!\n");
        }
        catch (IllegalArgumentException e) {
               repInput.setBackground(Color.RED);
               status = false;
               sb.append("Can't have negetive amount of reps!\n");
        }
        
        if(sb.toString().isBlank())
            return status;
        
        JOptionPane.showMessageDialog(null,sb.toString(),"Input Issues",JOptionPane.INFORMATION_MESSAGE, DialogBoxIcon.ISSUE);  
        return false;
    }
    
    /**
     * Caculates the one rep max from the user inputs of weight and rep
     * and sets one rep max output as user entered data
     * uses O'Connel's formula to calculate one rep max
     * @param evt 
     */
    private void calculateORMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateORMActionPerformed
        ormOutput.setText("");
        if(checkInputs()){
            Double t = (this.weight*(1+(Double.valueOf(reps)/40)));
            Double outputVal = Math.round(t * 100.0) / 100.0;
            ormOutput.setText(String.valueOf(outputVal));
        }
    }//GEN-LAST:event_calculateORMActionPerformed

    private void repInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_repInputFocusGained
        repInput.setBackground(Color.WHITE);
        repInput.setText("");
    }//GEN-LAST:event_repInputFocusGained

    private void weightInputFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightInputFocusGained
        weightInput.setBackground(Color.WHITE);
        weightInput.setText("");
    }//GEN-LAST:event_weightInputFocusGained

    private void repInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_repInputFocusLost
        if(repInput.getText().equals(""))
            repInput.setText("Please Enter the Number of Reps");
    }//GEN-LAST:event_repInputFocusLost

    private void weightInputFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_weightInputFocusLost
        if(weightInput.getText().equals(""))
            weightInput.setText("Please Enter the Weight you lifted");
    }//GEN-LAST:event_weightInputFocusLost

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton calculateORM;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel exerciseLbl;
    private javax.swing.JComboBox<String> exerciseOptions;
    private javax.swing.JTextField heading;
    private javax.swing.JTextField ormOutput;
    private javax.swing.JTextField repInput;
    private javax.swing.JLabel repLbl;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTextField userNameInput;
    private javax.swing.JLabel userNameLbl;
    private javax.swing.JTextField weightInput;
    private javax.swing.JLabel weightLbl;
    // End of variables declaration//GEN-END:variables
}
